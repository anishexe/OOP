Assignment No â€“ 6

Lab Assignment No 6:
 create  a class template to represent a generic vector . include following member functions:
1. To create the vector.
2.to modify the value of a given element.
3.to multiply by a scalar value.
4.to display the vector in the form (10,20,30,..) 
Aim:
   Program to Create  a class template to represent a generic vector in oops.
Description:
 We have implemented class template program to represent generic vector. We implemented  concept of vector to create the vector.To modify the value of a given element. To multiply by a scalar value. To display the vector in the form (10,20,30,..)

Oop Concepts Used:

1) vector:

Vectors are sequence container that can change size. Container is a objects that hold data of same type. Sequence containers store elements strictly in linear sequence.
Vector stores elements in contiguous memory locations and enables direct access to any element using subscript operator . Unlike array, vector can shrink or expand as needed at run time. The storage of the vector is handled automatically.
To support shrink and expand functionality at runtime, vector container may allocate some extra storage to accommodate for possible growth thus container have actual capacity greater than the size. Therefore, compared to array, vector consumes more memory in exchange for the ability to manage storage and grow dynamically in an efficient way.
Zero sized vectors are also valid. In that case vector.begin() and vector.end() points to same location. But behavior of calling front() or back() is undefined.
Definition
Below is definition of std::vector from <vector> header file
template < class T, class Alloc = allocator<T> > class vector;
Program:
#include<iostream>
#include<vector>
using namespace std;

int main(int argc, char const *argv[])
{
	std::vector<int> v;
	int n, ch=1, temp;

	cout<<"Enter the size of the vector: "<<endl;
	cin>>n;

	cout<<"Enter the elements of the vector: ";
	for (int i = 0; i < n; ++i)
	{
		cin>>temp;
		v.push_back(temp);
	}

	while(ch!=0){
	cout<<"\n1.Modify\n2.Multiply\n3.Display\n4.Exit\n";
	cout<<"Enter the option: ";
	cin>>ch;

	switch(ch){
		case 1:
			int pos, e;
			cout<<"Enter postion to modify: ";
			cin>>pos;
			if(pos<n){
				cout<<"Enter new element: ";
				cin>>e;

				v[pos] = e;
			}
			else{
				cout<<"\nInvalid Position!";
			}

			break;

		case 2:
		{
			int sval;
			cout<<"\nEnter an scalar value: ";
			cin>>sval;

			for(int i = 0; i < v.size(); i++){
				v[i] = v[i] * sval;
			}
			break;
		}
		case 3:
			for(int i=0;i<v.size();i++)
            {
             cout<<v[i]<<",";
            }

			break;
		case 4:
			cout<<"\nInvalid choice";
			break;

	}

}
	return 0;
}
Output:
 

Conclusion:
Thus we have successfully done with creation, modification, multiplication by using vector concept in oops. 
